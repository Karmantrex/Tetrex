function buildQidRollup() {
  // 1) Put your spreadsheet ID here. From the URL between /d/ and /edit
  const SPREADSHEET_ID = 'PASTE_SHEET_ID_HERE';

  // 2) Exact tab names
  const SOURCE_SHEET = 'Raw';          // change to your July tab name
  const TARGET_SHEET = 'QID_Rollup';

  // 3) Exact headers you want in the output, case and spacing must match
  const keepHeaders = [
    'QID',
    '___',
    'COMPONENT',
    'TEAM',
    'SNAP_DT',
    'DUE_DATE',
    'KB_VULN_TITLE',
    'RISK_LEVEL'
  ];

  const ss = SpreadsheetApp.openById(SPREADSHEET_ID);
  const src = ss.getSheetByName(SOURCE_SHEET);
  if (!src) throw new Error(`Source tab not found: ${SOURCE_SHEET}`);

  const data = src.getDataRange().getValues();
  if (data.length < 2) throw new Error('No data rows found');

  const header = data[0].map(h => String(h).trim());
  const idx = {};
  keepHeaders.forEach(h => {
    const i = header.indexOf(h);
    if (i === -1) throw new Error(`Missing required column in header: ${h}`);
    idx[h] = i;
  });

  const seen = new Map();
  for (let r = 1; r < data.length; r++) {
    const row = data[r];
    const qid  = String(row[idx['QID']]).trim();
    const team = String(row[idx['TEAM']]).trim();
    const comp = String(row[idx['COMPONENT']]).trim();
    if (!qid || !team || !comp) continue;

    const key = [qid, team, comp].join('||');
    if (!seen.has(key)) {
      seen.set(key, keepHeaders.map(h => row[idx[h]]));
    }
  }

  const out = Array.from(seen.values()).sort((a, b) => {
    const teamCmp = String(a[3]).localeCompare(String(b[3])); if (teamCmp) return teamCmp;
    const compCmp = String(a[2]).localeCompare(String(b[2])); if (compCmp) return compCmp;
    const qidCmp  = String(a[0]).localeCompare(String(b[0])); if (qidCmp)  return qidCmp;
    return new Date(a[5]) - new Date(b[5]); // DUE_DATE
  });

  // Recreate target tab so you actually see it
  let tgt = ss.getSheetByName(TARGET_SHEET);
  if (tgt) ss.deleteSheet(tgt);
  tgt = ss.insertSheet(TARGET_SHEET);

  tgt.getRange(1, 1, 1, keepHeaders.length).setValues([keepHeaders]);
  if (out.length) {
    tgt.getRange(2, 1, out.length, keepHeaders.length).setValues(out);
  }
  tgt.setFrozenRows(1);
  tgt.getDataRange().createFilter();
  SpreadsheetApp.flush();

  ss.toast(`QID_Rollup created with ${out.length} rows`, 'Done', 5);
  Logger.log(`Created tab "${TARGET_SHEET}" with ${out.length} rows`);
}
