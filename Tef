function onOpen() {
  SpreadsheetApp.getUi()
    .createMenu('Rollups')
    .addItem('Build Unique QID rollup', 'buildUniqueQidRollupPrompt')
    .addToUi();
}

// Prompts you for the source tab name
function buildUniqueQidRollupPrompt() {
  const ui = SpreadsheetApp.getUi();
  const resp = ui.prompt('Unique QID Rollup', 'Enter the exact source tab name:', ui.ButtonSet.OK_CANCEL);
  if (resp.getSelectedButton() !== ui.Button.OK) return;
  const srcName = resp.getResponseText().trim();
  if (!srcName) {
    ui.alert('No tab name provided.');
    return;
  }
  buildUniqueQidRollup(srcName);
}

// Core logic. Call this directly if you prefer hardcoding a tab name.
function buildUniqueQidRollup(SOURCE_SHEET) {
  const TARGET_PREFIX = 'QID_Unique';  // final tab will be QID_Unique or QID_Unique_<src>
  const ss = SpreadsheetApp.getActiveSpreadsheet();

  const src = ss.getSheetByName(SOURCE_SHEET);
  if (!src) throw new Error(`Source tab not found: ${SOURCE_SHEET}`);

  const data = src.getDataRange().getValues();
  if (data.length < 2) throw new Error('No data rows found');

  const header = data[0].map(h => String(h).trim());
  const qidIdx = header.indexOf('QID');
  if (qidIdx === -1) throw new Error('Missing QID column in header row');

  // one row per unique QID, keep the first occurrence
  const seen = new Map();
  for (let r = 1; r < data.length; r++) {
    const row = data[r];
    const qid = String(row[qidIdx]).trim();
    if (!qid) continue;
    if (!seen.has(qid)) seen.set(qid, row.slice()); // keep full row with all columns
  }

  // build output array: header + unique rows
  const out = Array.from(seen.entries())
    .sort((a, b) => {
      const ax = a[0], bx = b[0];
      const an = Number(ax), bn = Number(bx);
      const aNum = !isNaN(an), bNum = !isNaN(bn);
      if (aNum && bNum) return an - bn;
      return String(ax).localeCompare(String(bx));
    })
    .map(entry => entry[1]);

  // create or recreate target tab
  const targetName = ss.getSheetByName(TARGET_PREFIX) ? `${TARGET_PREFIX}_${SOURCE_SHEET}` : TARGET_PREFIX;
  let tgt = ss.getSheetByName(targetName);
  if (tgt) ss.deleteSheet(tgt);
  tgt = ss.insertSheet(targetName);

  // write header and rows
  tgt.getRange(1, 1, 1, header.length).setValues([header]);
  if (out.length) tgt.getRange(2, 1, out.length, header.length).setValues(out);

  tgt.setFrozenRows(1);
  tgt.getDataRange().createFilter();

  SpreadsheetApp.getActive().toast(`Created "${targetName}" with ${out.length} unique QID rows`);
}
