function dedupeByQID_NewTab() {
  // CHANGE THIS to your exact source tab name
  const SOURCE_TAB = '';
  // New tab to write results
  const TARGET_TAB = 'Unique_QIDs';

  const ss = SpreadsheetApp.getActiveSpreadsheet();
  const src = ss.getSheetByName(SOURCE_TAB);
  if (!src) throw new Error(`Source tab not found: ${SOURCE_TAB}`);

  const values = src.getDataRange().getValues();
  if (values.length < 2) throw new Error('No data rows found');

  // Find QID column in header (case-insensitive, trims spaces)
  const header = values[0].map(h => String(h).trim());
  const qidIdx = header.findIndex(h => h.toLowerCase() === 'qid');
  if (qidIdx === -1) throw new Error('QID column not found in header row');

  // Build output: header + first occurrence row per QID
  const seen = new Set();
  const out = [header];

  for (let r = 1; r < values.length; r++) {
    const row = values[r];
    const qid = String(row[qidIdx]).trim();
    if (!qid) continue;                 // skip empty QID
    if (seen.has(qid)) continue;        // already captured a row for this QID
    seen.add(qid);
    out.push(row);
  }

  // Recreate target tab
  let tgt = ss.getSheetByName(TARGET_TAB);
  if (tgt) ss.deleteSheet(tgt);
  tgt = ss.insertSheet(TARGET_TAB);

  // Write results
  tgt.getRange(1, 1, out.length, out[0].length).setValues(out);
  tgt.setFrozenRows(1);
  tgt.getDataRange().createFilter();

  // Optional: quick counts for sanity
  tgt.getRange(1, out[0].length + 2).setValue('Unique QIDs');
  tgt.getRange(2, out[0].length + 2).setValue(seen.size);

  SpreadsheetApp.flush();
}
